'use strict'
// მთლიანი ფაილს ამოწმებს რამე თუ არის არასწორი, ასევე თვითონ ფუნციაშიც შეიძლება ჩაიწეროს შესამოწმებლად.

// array მასივი, ერთ ცვლადში შემიძლია შევინახო რამდენიმე მნიშვნელობა. []

  //                 0        1      2               3              4
let userNames = ['anaa', 'nino', 'beka', ['mariami', 'gurami'],'lasha'];
//                                            0          1

// ინდექსი იწყება 0-დან, anna - 0, nino - 1, beka - 2, lasha - 3.
console.log(userNames[3]); 
// რომელი მნიშნვნელობის ამოღებაც მინდა იმის ინდექსი უნდა დავწერო, რადგან მინდა anaa დავწერე 0 მასივის ფრჩხილში
console.log(userNames); 

// ჩაშენებული მასივი nested array ანუ როცა ერთ მასივში არის რამდენიმე მასივი
// ამ მასივის ინდექსი იქნება 3 ['mariami', 'gurami'] და lasha იქნება უკვე 4
// ჩაშლილად ['mariami', 'gurami'] ინდექსი იქნება 0 და 1. 
// თუ მინდა 'mariami' ამოვიღო მასივიდან მაშინ ასე დავლოგავ
console.log(userNames[3][0]);

// length მასივის სიგრძის გაზომვა, რამდენი ელემენტია მასივში
console.log(userNames.length); //5
console.log(userNames[userNames.length -1]); //lasha
// თუ მინდა გავიგო ბოლო მნიშნვნელობა მასივის ფრჩხილში ვწერ სახელთან ერთად length და -1 რადგან ინდექსირება იწება 0-დან ამიტომ ვაკლებთ 1-ს. ბოლოს წინა თუ მინდა დავწერ -2 და ა.შ.

//object ობიექტები, რამდენიმე მნიშვნელობა შემიძლია შევინახო, მე როგორც მინდა ისე. {} ობიექტზე სიგრძეს ვერ გავიგებთ 

let userInfo = {
    userName: 'anna',
    userAge: 20,
    userStatus: true,
    //ობიექტშიც შემიძლია ჩავამატო კიდე ობიექტი, ყველა სახელს რასაც ვარქმევთ ჩვენ თვითონ ვიფიქრებთ.
    userPhone: {
        code: 593,
        number: 123456789
    },
    // მასივიც შემიძლია ობიექტში ჩავაშენო
    userHobbies: ['travel', 'dance', 'read'],
    // თვითონ ჩაშენებულ მასივშიც შემიძლია ჩავამატო ობიექტები
    userComments: [
        {
            id: 1,
            text: 'comment 1',
        },
        {
            id: 2,
            text: 'comment 2',
        },
    ],
 };

 // 2 მეთოდით შეგვიძლია ამოვიღოთ ცვლადი: 1. dot notation. 2. bracket notation
 // 1. dot notation - აქვს ასეთი ჩანაწერი.  ჯობია გამოვიყენოთ მაშინ როცა ვიცი კონკრეტულად რომელი პარამაეტრის ამოღება მინდა.
 console.log(userInfo.userName); // anna 

 // თუ მინდა პატარა ობიექტი ამოვიღო მაშინ
 console.log(userInfo.userPhone); // code: 593, number: 123456789
 
 // თუ მინდა ჩაშენებული ობიექტიდან ამოვიღო მონაცემი მაშინ
 console.log(userInfo.userPhone.number); // 123456789

 // თუ მინდა მასივიდან ამოვიღო ელემენტი მაშინ მშირდება მასივის ფრჩხილი და ინდექსი რომელიც მინდა
 console.log(userInfo.userHobbies[1]); // dance

 //თუ მინდა ამოვიღო ჩაშენებულ მასივში ჩამატებული ობიექტი მაშინ
 console.log(userInfo.userComments); // ორივე ჩაშენებული ობიექტი გამოჩნდა
 // თუ მინდა ამოვიღო პირველი ობიექტი
 console.log(userInfo.userComments[0]); // id: 1, text: 'comment 1
 // თუ მინდა მეორე ჩაშენებული ობიექტიდან ამოვიღო მხოლოდ text
 console.log(userInfo.userComments[1].text); // comment 2

 // 2. bracket notation - აქვს ასეთი ჩანაწერი [''] ეგეთი ფრჩხილი და სტრინგის ნიშანი. როცა მექნება დინამიური მნიშვნელობები მაშინ ჯობია გამოვიყენოთ ეს მეთოდი.
 console.log(userInfo['userAge']); // 20

// თუ მინდა პატარა ობიექტი ამოვიღო მაშინ
console.log(userInfo['userPhone']); // code: 593, number: 123456789
 
// თუ მინდა ჩაშენებული ობიექტიდან ამოვიღო მონაცემი მაშინ
console.log(userInfo['userPhone']['code']); // 593

// თუ მინდა მასივიდან ამოვიღო ელემენტი
console.log(userInfo['userHobbies'][2]); //read

//თუ მინდა ამოვიღო ჩაშენებულ მასივში ჩამატებული ობიექტი მაშინ
console.log(userInfo['userComments']);
// თუ მინდა ამოვიღო პირველი ობიექტი
console.log(userInfo['userComments'][0]);
// თუ მინდა მეორე ჩაშენებული ობიექტიდან ამოვიღო მხოლოდ text
console.log(userInfo['userComments'][1]['text']);

// თუ მასივის ამოღება მინდა მაშინ მჭირდება [] ფრჩხილები და ვუწერ შესაბამის ინდექს. თუ მაქვს ობიექტი მაშინ წერტილი და მნიშვნელობა ან '' და მნიშვნელობა.

let user2 = {
    name: 'nini',
    age: 25,
};
// თუ მინდა შევცვალო რომელიმე key ობიექტიდან მაშინ მაქვს ესეთი ჩანაწერი  და დაილოგება 26.
user2.age = 26;
// თუ მინდა დავამატო ახალი key მაშონ ასე ჩავწერთ
user2.gender = 'female';
// თუ მინდა წავშალო რომელიმე key
delete user2.name;
console.log(user2);
 
// loop array ციკლი მასივზე
let nameUsers = ['lasha', 'ana', 'keti'];
// სამივე ცალცალკე რომ ამოვიღოთ ესეთი ჩანაწერ მექნება, სათითაოდ გამოჩნდა
console.log(nameUsers[0]);
console.log(nameUsers[1]);
console.log(nameUsers[2]);
// მაგრამ თუ მაქვს ბევრი ელემენტი ესე ცალცალკე რომ არ ჩამოვწერო მაგისთვის არის loop ჩანაწერი
for (let i = 0; i < nameUsers.length; i++) {
    console.log(nameUsers[i]);
}
// for loop არის ეგ ჩანაწერი, i-ს მაგივრად ნებისმიერი ასო შემიძლია ჩავწერო რაც მინდა ანუ რაღაც სახელს ვარქმევ
// i = 0 იმიტომ რომ ინდექსირება იწყება 0-დან, თუ მინდა დავიწყო არა 0 ინდექსიდან არამედ keti-დან რომლის ინდექსიც არის 2, მაშინ დავუწერდი i = 2.
// i < 3 იმიტომ რომ მაქვს სულ 3 ელემენტი მაქვს.
// i++ = i+1 დალოგვისას თავიდან i იქნება 0 და დაილოგება lasha, მერე i გახდება 1 და დაილოგება ana და ბოლოს
// i გახდება 2 და დაილოგება keti და ყველა ელემეტი ცალცალკე გამოჩნდება
// მაგალითად ამ მასივში დავამატე ელემენტები ან არ ვიცი სულ 3 ელემენტი მაქვს თუ რამდენი. როგორ უნდა მივწვდე
// ყველა ელემენტს i < 3 ეს ჩანაწერი აღარ გამომადგება. მექნება i < nameUsers.length და თვითონ გამოთვლის 
// რამდენი ელემენტია ამ მასივში. ეს არის უნივერსალური ჩანაწერი

let arrayNew = [[15, 24, 7], [100, 29, 36], [150, 2]];
//                   0             1           2

for (let index = 0; index < arrayNew.length; index++) {
    const element = arrayNew[index];
// index არის იგივე i. ანუ ნებისმიერი სახელი რასაც მე დავარქმევდი. const element ახალი ცვლადი შემოვიდა და 
// მასში დაილოგა arraynew-ს ელემენტები. რომ დავლოგე სამივე ჩადგმული მასივი გამოჩნდა.
console.log(element);

// ახალი ჩანაწერით for loop
for (let el1 of arrayNew) {
    console.log(el1);
} // დალოგავს მასივებს

// თუ მინდა ამოვიღო ჩადგმული მასივიდან სათითაოდ ელემენტები, ანუ ცალკე ეწეროს 15, 24, 7, 100 და ყველა
// დამჭირდება კიდევ ერთი for loop
for (let a = 0; a < element.length; a++) { // element იმიტომ რომ ეგ ერქვა როცა სამივე ჩადგმული მასივი ამოვიღეთ
    const item = element[a];
    console.log(item);
}
}
// index არის იგივე i. ანუ ნებისმიერი სახელი რასაც მე დავარქმევდი. const element ახალი ცვლადი შემოვიდა და 
// მასში დაილოგა arraynew-ს ელემენტები. რომ დავლოგე სამივე ჩადგმული მასივი გამოჩნდა.

//while მსგავსია როგორც for loop
let aray = ['html', 'css', 'javascript' ];
// ესეთი ჩანაწერი აქვს ამ while-ს
let b = 0; // b როგორც i მქონდა აღებული, ნებისმიერი სახელი შემიძლია დავარქვა
while (b < aray.length) {
    console.log(aray[b]);
    b++;
};
// ასე ჩაშლილად იწერება ეს while

// for ახალი loop
let array2 = ['html', 'css', 'javascript', 'python'];
for (let item1 of array2) {
    console.log(item1);
}
// for loop-ის ახალი ჩანაწერი, რაღაც მასივიდან თითოთითოდ ამოიღებს ყველა ელემენტს, ახალ ცვლად ვქმნით რაც 
// მინდა იმას დავარქმევ, ამ შემთხვევაში ეს არის item1.  of-ის საშუალებით გადაუვლის ყველას სათითაოდ, ამის მინუსი
// არის ის რომ თუ მინდა ინდექს 2-დან ამოვიღო ვერ ამოვიღებ, აქ ხდება ყველა ელემენტის გაშვება.

for (let el in array2) {
    console.log(el);
}
// el არის ცვლადის სახელი, რასაც მე მოვიფიქრებ იმას დავუწერ. ამ el-ის დახმარებით უკვე მივწვდები ყველა 
// ელემეტის ინდექსს, ანუ დავლოგავ მხოლოდ ინდექსებს 0, 1, 2, 3.

// break and continue
let i = 0;
while (i < 11) {
    console.log(i);
    i++;
} // 11მდე ყველა ციფრი დაილოგება, 0<11

while (true) { // უსასრულოდ დაილოგება ციფრები
console.log(i);
i++;
if (i == 11) { // როცა i გახდება 11, მაშინ შეჩერდება. == ნიშნავს შედარებას
break; // შეჩერებას ნიშნავს
}
} 

let numbers = [100, 25, 140, 6, 102, 15];
for (let item2 of numbers) {
if (item2 == 140) {
break;
}
console.log(item2);
} // დაილოგება 100, 25. როცა item2 გახდება 140 მაშინ შეაჩეროს მუშაობა, და ა ღარ შეხედავს რა წერია 140-ის მერე

for ( let item2 of numbers) {
if (item2 == 140) {
continue;
}
console.log(item2);
}
// 140-ის გარდა დაილოგება ყველა ელემენტი. ეს continue აკეთებს მაგას

for (let i = 0; i < 5; i++) {
if (i == 3) {
continue;
}
console.log(i);
}
// დაილოგება 0, 1, 2, 4

let numbersArray = [15, 24, 17, 5, 4, 28, 39, 48, 120];
for (let num = 0; num < numbersArray.length; num++) {
console.log(numbersArray[num]); // დაიბეჭდება ყველა ელემენტი.
if (numbersArray[num] > 50) {
console.log(numbersArray[num]); // 50ზე მეტი რომელიც არის მხოლოდ ის ელემენტი დაილოგება
}
}
// ახალი ჩანაწერით იგივე იქნება ასე, 50-ზე მეტი რიცხვბი რომ ამოვიღოთ
for (let item of numbersArray) { // ჯერ ყველა ელემენტს გამოიტანს
if (item > 50) { // ამით უკვე ვეუბნები რომ 50-ზე მეტ რომელიცაა ის გამოაჩინე
console.log(item);
}
}

let newArray2 = ['html', 14, 7, 36, 'css', 25, 'javaskript', 100];
for (let i = 0; i < newArray2.length; i++) {
    console.log(newArray2[i]); // წამოიღებს ყველა ელემენტს
    if (typeof newArray2[i] == 'string') {
    console.log(newArray2[i]); // წამოიღებს მხოლოდ სტრინგებს
    }
}
// იგივე მაგალითი ახალი ჩანაწერით
for (let i of newArray2) {
if (typeof i == 'number' && i % 5 == 0) {
console.log(i);
} // ამ შემთხევაში ამოვიღე ნამბერ ტიპის ის ელემენტები, რომელთა 5-ზე ნაშთიანი გაყოფის შედეგად მიიღება 0
} // დაილოგება 25, 100.

